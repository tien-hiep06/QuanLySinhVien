<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btKetQua.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vwAADr8BOAVTJAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANdSURBVFhHvVZJ
        a1RBEB5FUFxQQQ8eFAUPQhA9qCh48SQoehDUH6B4UPEiEi+CycUNBcEdJILgD1A86kGICC64gCBJjFEz
        Xf26ehI0mHS9SMvX82Yy05lJgnnJB8X0q2W6q7qqugqF/wCZkf2K01ZlXUstH9/gkxnZV8vPFcq4dmL5
        SEauEYvWWjaBnySyOXyzu0hG3ivj2mLbXEDsFA0OrwtrK0eI5VmZL8/JylGsi6XhNcRpf2ybCxTLO2Xd
        Iay99/OI05/4xi++g451BzXLm9g2FyiWbcTynTh9rG26m9hdIJYhhD77fkIsfdCLbScF7lGxnAgJNhEZ
        10ZWeojFE8vvul8rPZCPs+G0VZv0tGLZGu+LUM5VLLc0pz/Iyh3FcpvYFYllULO7FLyLSFl3JfP2L1n3
        lKzcJZbeiWyCjpGv+H/v/ZzqAYjllLLywhi/pMojv4hYOiGrKjaAMqN7EXLoJ4lfHJJxApuKDiJdZRLL
        50ahSUrpTshifowQCesOY100smUyG+ggmasMYhnBybA2xq/SLG+zewUN1xo3grbuMnF6FusschPaZDqD
        VYZi+aJtuiOsTXpGs3TgjsjK9sm8ARCBSmlONQLE8qnKUCwnieXVwIBfpow7DyqV/FLwIKuzjpDlwLdi
        0S+sud+mNg3zJHjL8jBkvpEPaKVZFWiENi6nrBTbx6pAHtVUQVObio5muVFXBQCxdGmWm3Hp5EHKyFVi
        eUkso3jI6jauAA8MFONT50HayDE1MLwWLRqNqm/QL4/3LyTJyHrN8gBtNvZgukRW7hFLoky6i1iuo2ri
        /QNm8hXDjEAsr6nkNiIKsTygt9cvQE+I+Xkgq/2hrAoa94lZiwBLdywvFNltIJb7EMZJNF2aUg5k9Tkj
        ZVhXBSzdaHjx/uEAM1WGNX3Aowkh2vH+5SsohwoPUCeMxnmSA2HugLPx/gWl/Eo8IprdAYQrhC32JAfK
        punxB8AUA2GWKBrRiE8/XSo3OeloeAUhB6xrQamoZHRPLM8DGOn77Z/VMT+AWFylWeBpjeV5AHt0dfn5
        MT8AQ8ksRKDYNAKNciBOoOkSegCaXcMcKP7yK8ozwVgVxEmUBzUtQwBPMsawSh+IPciDmpZhBRiVMI4r
        luPx6XMhm56rvYJ/Cbm4IkXofbMAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="sidebartimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>33, 18</value>
  </metadata>
</root>